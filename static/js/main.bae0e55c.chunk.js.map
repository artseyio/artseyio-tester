{"version":3,"sources":["assets/logo.png","components/IconButton.tsx","model/ComboDefinition.ts","components/ArtseyInput.tsx","model/KeyMapDefinition.ts","effects/KeyMapperEffect.ts","components/KeyMapper.tsx","App.tsx","components/Typography.tsx","index.tsx"],"names":["StyledIconButton","styled","button","p","theme","textColorFaded","IconButton","props","className","active","disabled","title","tooltip","onClick","icon","Combos","ArtsyCode","ArtsyKey","StyledArtseyInput","div","cursorColor","textColor","colorRed","ArtseyInput","mapping","wordDivRef","useRef","useState","isFocused","setFocused","keyQueue","setKeyQueue","caretPos","setCaretPos","randomWords","wordList","setWordList","enteredKeys","setEnteredKeys","getArtseyValue","keymap","queue","mappedKeys","i","foundKey","Object","keys","find","v","fromKey","key","undefined","push","length","comboKeyCode","map","m","toCode","sort","reduce","pre","cur","toKey","hasOwnProperty","useEffect","reset","interval","setInterval","joinedWordList","join","artsyKey","prev","slice","split","clearInterval","current","focus","id","tabIndex","onFocus","onBlur","onKeyUp","e","oldArray","preventDefault","ref","pos","caretDiv","w","idxw","wordDiv","c","idxc","caret","ele","generateWordListElements","faSync","DefaultKeyMaps","name","A","R","T","S","E","Y","I","O","StyledKeyMapper","borderColor","KeyMapper","keymaps","setKeyMaps","setMapping","propOnChange","onMappingChanged","localStorage","getItem","customMap","JSON","parse","selectedMap","onKeyChanged","targetCode","targetKey","value","newMapping","newKeyMaps","filter","k","setItem","stringify","onChange","target","def","StyledApp","App","setKeyMap","src","logo","alt","href","rel","GlobalStyle","createGlobalStyle","backgroundColor","primaryColor","Typography","ReactDOM","render","StrictMode","secondaryColor","colorBlue","colorGreen","document","getElementById"],"mappings":"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","file":"static/js/main.bae0e55c.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.ba7ca334.png\";","import styled from \"styled-components\";\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { IconDefinition } from '@fortawesome/free-solid-svg-icons';\r\n\r\ninterface ButtonProps  {\r\n    active?: boolean;\r\n    disabled?: boolean;\r\n    icon?: IconDefinition;\r\n    tooltip?: string;\r\n    color?: string;\r\n    onClick?: React.MouseEventHandler<HTMLButtonElement | undefined>;\r\n}\r\n\r\nfunction IconButton(props: ButtonProps) {\r\n    return (\r\n        <StyledIconButton className={ props.active ? 'active' : '' } disabled={props.disabled} title={props.tooltip} onClick={props.onClick} >\r\n            { props.icon != null && <FontAwesomeIcon icon={props.icon} /> }\r\n        </StyledIconButton>\r\n    );\r\n}\r\n\r\nconst StyledIconButton = styled.button`\r\n    margin: 0;\r\n    padding: 2px;\r\n    border: none;\r\n    background: none;\r\n    color: ${ p => p.theme.textColorFaded };\r\n\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n\r\n    font-size: 1.2rem;\r\n\r\n    svg {\r\n        flex: 1;\r\n    }\r\n\r\n    :active:enabled {\r\n        color: black!important;\r\n        transform: scale(0.85);\r\n    }\r\n\r\n    :hover:enabled {\r\n        cursor: pointer;\r\n        color: ${ p => p.theme.textColorFaded };\r\n    }\r\n`;\r\n\r\nexport default IconButton;\r\n","export const Combos: { [id: string]: string } = { \r\n    \"KeyE_KeyO\": \"b\",\r\n    \"KeyE_KeyY\": \"c\" ,\r\n    \"KeyA_KeyR_KeyT\": \"d\" ,\r\n    \"KeyA_KeyR\": \"f\",\r\n    \"KeyR_KeyT\": \"g\",\r\n    \"KeyE_KeyI\": \"h\",\r\n    \"KeyS_KeyT\": \"j\",\r\n    \"KeyO_KeyY\": \"k\",\r\n    \"KeyE_KeyI_KeyY\": \"l\",\r\n    \"KeyI_KeyO_KeyY\": \"m\",\r\n    \"KeyI_KeyO\": \"n\",\r\n    \"KeyE_KeyI_KeyO\": \"p\",\r\n    \"KeyA_KeyS_KeyT\": \"q\",\r\n    \"KeyI_KeyY\": \"u\",\r\n    \"KeyR_KeyS\": \"v\",\r\n    \"KeyA_KeyS\": \"w\",\r\n    \"KeyR_KeyS_KeyT\": \"x\",\r\n    \"KeyA_KeyR_KeyS_KeyT\": \"z\",\r\n    \"KeyE_KeyI_KeyO_KeyY\": \"Space\",\r\n    \"KeyE_KeyR\": \"Backspace\"\r\n};","import randomWords from \"random-words\";\r\nimport styled from \"styled-components\";\r\nimport React, { FC, useEffect, useRef, useState } from 'react';\r\nimport { faSync } from '@fortawesome/free-solid-svg-icons';\r\n\r\nimport IconButton from './IconButton';\r\nimport useKeyMapper from '../effects/KeyMapperEffect';\r\nimport { KeyMapDefinition } from '../model/KeyMapDefinition';\r\n\r\ninterface ArtseyInputComponentProps {\r\n    keymap: KeyMapDefinition;\r\n}\r\n\r\nexport const ArtseyInput: FC<ArtseyInputComponentProps> = (props: ArtseyInputComponentProps) => {\r\n    const wordDivRef = useRef<HTMLDivElement>(null);\r\n\r\n    const [isFocused, setFocused] = useState(false);\r\n    const [keyQueue, setKeyQueue] = useState<Array<React.KeyboardEvent<HTMLInputElement>>>([]);\r\n\r\n    const [caretPos, setCaretPos] = useState(0);\r\n    const [wordList, setWordList] = useState<Array<string>>(randomWords(25));\r\n    const [enteredKeys, setEnteredKeys] = useState<Array<string>>([]);\r\n    \r\n    const getArtseyValue = useKeyMapper(props.keymap);\r\n\r\n    useEffect(() => reset(), []);        \r\n    useEffect(() => {\r\n        const interval = setInterval(() => {\r\n            if(keyQueue.length !== 0) {\r\n                let joinedWordList = wordList.join(\" \");\r\n                let artsyKey = getArtseyValue(keyQueue);\r\n\r\n                if(artsyKey === \"Backspace\" && enteredKeys.length > 0) {\r\n                    setEnteredKeys(prev => [...prev.slice(0, prev.length - 1)]);\r\n                    setCaretPos(caretPos - 1);\r\n                }\r\n                else if(\r\n                    artsyKey !== undefined && artsyKey !== \"Backspace\"\r\n                    && ((joinedWordList.split(\"\")[caretPos] === \" \" && artsyKey === \"Space\") || joinedWordList.split(\"\")[caretPos] !== \" \")\r\n                ) {\r\n                        setEnteredKeys(prev => [...prev, artsyKey as string]);\r\n                        setCaretPos(caretPos + 1);\r\n                }                \r\n                setKeyQueue([]);\r\n            }\r\n        }, 25);\r\n        return () => clearInterval(interval);\r\n    }, [keyQueue, enteredKeys, caretPos, getArtseyValue, wordList]);\r\n\r\n    const reset = () => {\r\n        setEnteredKeys([]);\r\n        setKeyQueue([]);\r\n        setCaretPos(0);\r\n        setWordList(randomWords(25));\r\n        wordDivRef.current?.focus()\r\n    }\r\n\r\n    const onKeyUp = (e: React.KeyboardEvent<HTMLInputElement>) => {\r\n        setKeyQueue(oldArray => [...oldArray, e]);\r\n        e.preventDefault();\r\n    }\r\n\r\n    const generateWordListElements = (): Array<JSX.Element> => {\r\n        let pos = 0;\r\n        let caretDiv = <div id=\"caret\" key=\"caret\"></div>;\r\n        let words = wordList.map((w, idxw) => {\r\n            let wordDiv = <div className=\"word\" key={ idxw }>\r\n                { w.split(\"\").map((c, idxc) => {\r\n                    let caret = pos === caretPos ? caretDiv : undefined;\r\n                    let ele = enteredKeys.length - 1 >= pos\r\n                        ? <div className={ enteredKeys[pos] === c ? \"letter correct\" : \"letter wrong\" } key={ idxc }>{c}</div>\r\n                        : <div className=\"letter\" key={ idxc }>{c}</div>;\r\n                    pos++;\r\n                    return caret !== undefined ? [caret, ele] : [ele];\r\n                })}\r\n                { pos === caretPos && caretDiv }\r\n                <div className=\"space\"></div>\r\n            </div>\r\n            pos++;\r\n            return wordDiv;\r\n        });\r\n        return words;\r\n    }\r\n\r\n    return (\r\n        <StyledArtseyInput>\r\n            <div id=\"word-list\" tabIndex={0} onFocus={ () => setFocused(true) } onBlur={ () => setFocused(false) } onKeyUp={ onKeyUp } ref={ wordDivRef }>\r\n                { !isFocused && <div id=\"focus-message\"><p>Focus Please</p></div> }\r\n                { generateWordListElements() }\r\n            </div>\r\n            <small id=\"keycode-monitor\">Last Registered: { enteredKeys.length !== 0 ? enteredKeys[enteredKeys.length - 1] : \"NONE\" }</small>\r\n            <IconButton icon={faSync} onClick={ reset } ></IconButton>            \r\n        </StyledArtseyInput>\r\n    );\r\n}\r\n\r\nconst StyledArtseyInput = styled.div`{}\r\n    display:flex;\r\n    justify-content: center;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    align-content: stretch;\r\n    align-items: stretch;\r\n    margin: 100px 0;\r\n\r\n    #logo {\r\n        width: 150px;\r\n    }\r\n\r\n    #word-list {\r\n        position: relative;\r\n        font-size: 1.5rem;\r\n        display: flex;\r\n        flex-wrap: wrap;\r\n        outline: 0;\r\n        -webkit-user-select: none; /* Safari */        \r\n        -moz-user-select: none; /* Firefox */\r\n        -ms-user-select: none; /* IE10+/Edge */\r\n        user-select: none; /* Standard */\r\n    }\r\n\r\n    #keycode-monitor {\r\n        text-align: left;\r\n        font-weight: bold;\r\n        margin: 10px 0;\r\n        color: ${ p => p.theme.textColorFaded };\r\n    }\r\n\r\n    #caret {\r\n        display: block;\r\n        width: 0px;\r\n        border: 1px solid ${ p => p.theme.cursorColor };\r\n        animation: blinker 2s linear infinite;\r\n        margin-top: 5px;\r\n    }\r\n\r\n    @keyframes blinker {\r\n        50% {\r\n            opacity: 0;\r\n        }\r\n    }\r\n\r\n    #focus-message {\r\n        position: absolute;\r\n        width: 100%;\r\n        height: 100%;\r\n        text-align: center;\r\n        background: rgba(255, 255, 255, 0.75);\r\n        display: flex;\r\n        justify-content: center;\r\n        align-items: center;\r\n\r\n        p { font-weight: bold; }\r\n    }\r\n\r\n    .word {\r\n        display: flex;\r\n        margin-right: 10px;\r\n        color: ${ p => p.theme.textColorFaded };\r\n    }\r\n\r\n    .correct { color: ${ p => p.theme.textColor }; }\r\n    .wrong { color: ${ p => p.theme.colorRed }; }\r\n`;\r\n\r\nexport default ArtseyInput;","export type ArtsyKeyMapping = { fromKey: string, toCode: string, toKey: string }\r\nexport enum ArtsyCode {\r\n    A = \"KeyA\", R = \"KeyR\", T = \"KeyT\", S = \"KeyS\",\r\n    E = \"KeyE\", Y = \"KeyY\", I = \"KeyI\", O = \"KeyO\"\r\n}\r\n\r\nexport enum ArtsyKey {\r\n    A = \"a\", R = \"r\", T = \"t\", S = \"s\",\r\n    E = \"e\", Y = \"y\", I = \"i\", O = \"o\"\r\n}\r\n\r\nexport interface KeyMapDefinition {\r\n    name: string;\r\n    keys: Record<ArtsyCode, ArtsyKeyMapping>;\r\n}\r\n\r\nexport const DefaultKeyMaps: Array<KeyMapDefinition> = [\r\n    { name: \"Left Hand\", keys: { \r\n            [ArtsyCode.A]: { fromKey: \"t\", toCode: ArtsyCode.A, toKey: ArtsyKey.A }, \r\n            [ArtsyCode.R]: { fromKey: \"r\", toCode: ArtsyCode.R, toKey: ArtsyKey.R }, \r\n            [ArtsyCode.T]: { fromKey: \"e\", toCode: ArtsyCode.T, toKey: ArtsyKey.T }, \r\n            [ArtsyCode.S]: { fromKey: \"w\", toCode: ArtsyCode.S, toKey: ArtsyKey.S }, \r\n            [ArtsyCode.E]: { fromKey: \"g\", toCode: ArtsyCode.E, toKey: ArtsyKey.E }, \r\n            [ArtsyCode.Y]: { fromKey: \"f\", toCode: ArtsyCode.Y, toKey: ArtsyKey.Y }, \r\n            [ArtsyCode.I]: { fromKey: \"d\", toCode: ArtsyCode.I, toKey: ArtsyKey.I }, \r\n            [ArtsyCode.O]: { fromKey: \"s\", toCode: ArtsyCode.O, toKey: ArtsyKey.O }\r\n        }\r\n    },\r\n    { name: \"Right Hand\", keys: {\r\n            [ArtsyCode.A]: { fromKey: \"y\", toCode: ArtsyCode.A, toKey: ArtsyKey.A }, \r\n            [ArtsyCode.R]: { fromKey: \"u\", toCode: ArtsyCode.R, toKey: ArtsyKey.R }, \r\n            [ArtsyCode.T]: { fromKey: \"i\", toCode: ArtsyCode.T, toKey: ArtsyKey.T }, \r\n            [ArtsyCode.S]: { fromKey: \"o\", toCode: ArtsyCode.S, toKey: ArtsyKey.S }, \r\n            [ArtsyCode.E]: { fromKey: \"h\", toCode: ArtsyCode.E, toKey: ArtsyKey.E }, \r\n            [ArtsyCode.Y]: { fromKey: \"j\", toCode: ArtsyCode.Y, toKey: ArtsyKey.Y }, \r\n            [ArtsyCode.I]: { fromKey: \"k\", toCode: ArtsyCode.I, toKey: ArtsyKey.I }, \r\n            [ArtsyCode.O]: { fromKey: \"l\", toCode: ArtsyCode.O, toKey: ArtsyKey.O }\r\n        }\r\n    }\r\n];","import { Combos } from \"../model/ComboDefinition\";\r\nimport { ArtsyCode, KeyMapDefinition } from \"../model/KeyMapDefinition\";\r\n\r\nexport default function useKeyMapper(mapping: KeyMapDefinition) {\r\n    return (queue: Array<React.KeyboardEvent<HTMLInputElement>>): string | undefined => \r\n    {\r\n        let mappedKeys = [];\r\n        for(let i = 0; i < queue.length; i++) {\r\n            let foundKey = Object.keys(mapping.keys).find(v => mapping.keys[v as ArtsyCode].fromKey === queue[i].key);\r\n            if(foundKey !== undefined) mappedKeys.push(mapping.keys[foundKey as ArtsyCode]);\r\n        }\r\n        \r\n        let comboKeyCode = mappedKeys\r\n            .map(m => m.toCode)\r\n            .sort()\r\n            .reduce((pre, cur) => { return pre + (pre !== \"\" ? \"_\" : \"\") + cur }, \"\");\r\n\r\n        if(mappedKeys.length === 1) return mappedKeys[0].toKey;\r\n        else if(Combos.hasOwnProperty(comboKeyCode)) return Combos[comboKeyCode];\r\n        else return undefined;\r\n    };\r\n}","import styled from \"styled-components\";\r\nimport { ChangeEvent, FC, useEffect, useState } from 'react';\r\nimport { ArtsyCode, ArtsyKey, DefaultKeyMaps, KeyMapDefinition } from '../model/KeyMapDefinition';\r\n\r\ninterface KeyMapperComponentProps {\r\n    onMappingChanged: (mapping: KeyMapDefinition) => void;\r\n}\r\n\r\nexport const KeyMapper: FC<KeyMapperComponentProps> = (props: KeyMapperComponentProps) => {\r\n    const [keymaps, setKeyMaps] = useState(DefaultKeyMaps);\r\n    const [mapping, setMapping] = useState<KeyMapDefinition>(DefaultKeyMaps[0]);\r\n    const propOnChange = props.onMappingChanged;\r\n\r\n    useEffect(() => {        \r\n        let keymap = localStorage.getItem(\"keymap\");\r\n        let customMap = keymap ? JSON.parse(keymap) as KeyMapDefinition : undefined;        \r\n        if(customMap) {\r\n            setKeyMaps(prev => [...prev, customMap as KeyMapDefinition]);\r\n        }\r\n\r\n        let selectedMap = localStorage.getItem(\"selectedMap\");\r\n        if(selectedMap && selectedMap !== \"Custom\") {\r\n            let mapping = DefaultKeyMaps.find(map => map.name === selectedMap);\r\n            if(mapping) setMapping(mapping);\r\n        }\r\n        else if(selectedMap && selectedMap === \"Custom\" && customMap) {            \r\n            setMapping(customMap);\r\n        }\r\n    }, []);\r\n    useEffect(() => { propOnChange(mapping); }, [mapping, propOnChange]);\r\n\r\n    const onSelectionChanged = (e: ChangeEvent<HTMLSelectElement>) => {\r\n        let mapping = keymaps.find(map => map.name === e.target.value);\r\n        if(mapping) {\r\n            setMapping(mapping);\r\n            localStorage.setItem(\"selectedMap\", e.target.value);\r\n        }\r\n    };\r\n\r\n    const onKeyChanged = (targetCode: ArtsyCode, targetKey: ArtsyKey, value: string) => {\r\n        let newMapping: KeyMapDefinition = { name: \"Custom\", keys: { ...mapping.keys } };\r\n        newMapping.keys[targetCode] = { fromKey: value, toCode: targetCode, toKey: targetKey };\r\n\r\n        let newKeyMaps = keymaps.filter(k => k.name !== \"Custom\");\r\n        newKeyMaps.push(newMapping);\r\n\r\n        setKeyMaps(newKeyMaps);\r\n        setMapping(newMapping);\r\n        localStorage.setItem(\"selectedMap\", \"Custom\");\r\n        localStorage.setItem(\"keymap\", JSON.stringify(newMapping));\r\n    };\r\n\r\n    return (\r\n        <StyledKeyMapper>\r\n            <p>\r\n                This is the key mapper. It maps the keys of your keyboard to the indicated keys of artsey. The default mapping is for a left handed usage.\r\n                If you are already using combos or mod taps on your keyboard, make sure, that you are not using the regarding keys in the mapping. This can cause problems.\r\n            </p>\r\n            <p>Please select a predefined mapping or define one yourself. The mapping will be saved between sessions.</p>\r\n            <select value={ mapping?.name } onChange={ onSelectionChanged }>\r\n                { keymaps.map(def => <option value={ def.name } key={ def.name }>{ def.name }</option>) }\r\n            </select>\r\n            <div id=\"key-map\">\r\n                <div id=\"artsey-map-a\" className=\"key\">A <input value={ mapping?.keys[ArtsyCode.A].fromKey } onChange={ (e) => onKeyChanged(ArtsyCode.A, ArtsyKey.A, e.target.value) }></input></div>\r\n                <div id=\"artsey-map-r\" className=\"key\">R <input value={ mapping?.keys[ArtsyCode.R].fromKey } onChange={ (e) => onKeyChanged(ArtsyCode.R, ArtsyKey.R, e.target.value) }></input></div>\r\n                <div id=\"artsey-map-t\" className=\"key\">T <input value={ mapping?.keys[ArtsyCode.T].fromKey } onChange={ (e) => onKeyChanged(ArtsyCode.T, ArtsyKey.T, e.target.value) }></input></div>\r\n                <div id=\"artsey-map-s\" className=\"key\">S <input value={ mapping?.keys[ArtsyCode.S].fromKey } onChange={ (e) => onKeyChanged(ArtsyCode.S, ArtsyKey.S, e.target.value) }></input></div>\r\n                <div id=\"artsey-map-e\" className=\"key\">E <input value={ mapping?.keys[ArtsyCode.E].fromKey } onChange={ (e) => onKeyChanged(ArtsyCode.E, ArtsyKey.E, e.target.value) }></input></div>\r\n                <div id=\"artsey-map-y\" className=\"key\">Y <input value={ mapping?.keys[ArtsyCode.Y].fromKey } onChange={ (e) => onKeyChanged(ArtsyCode.Y, ArtsyKey.Y, e.target.value) }></input></div>\r\n                <div id=\"artsey-map-i\" className=\"key\">I <input value={ mapping?.keys[ArtsyCode.I].fromKey } onChange={ (e) => onKeyChanged(ArtsyCode.I, ArtsyKey.I, e.target.value) }></input></div>\r\n                <div id=\"artsey-map-o\" className=\"key\">O <input value={ mapping?.keys[ArtsyCode.O].fromKey } onChange={ (e) => onKeyChanged(ArtsyCode.O, ArtsyKey.O, e.target.value) }></input></div>\r\n            </div>\r\n        </StyledKeyMapper>\r\n    );\r\n}\r\n\r\nconst StyledKeyMapper = styled.div`{}\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n\r\n    select {\r\n        display: block;\r\n        margin-bottom: 20px;\r\n        border: 1px solid ${ p => p.theme.borderColor };\r\n        border-radius: 5px;\r\n        padding: 10px;\r\n        background: white;\r\n        color: ${ p => p.theme.textColor };\r\n        font-size: 1rem;\r\n    }\r\n\r\n    #key-map {\r\n        display: inline-grid;\r\n        gap: 10px;\r\n    }\r\n\r\n    .key {\r\n        border: 1px solid ${ p => p.theme.borderColor };\r\n        border-radius: 5px;\r\n        width: 50px;\r\n        height: 50px;\r\n        padding: 10px 5px;\r\n        font-weight: bold;\r\n        text-align: center;\r\n\r\n        input {\r\n            width: 100%;\r\n            box-sizing: border-box;\r\n            border: 1px solid ${ p => p.theme.borderColor };\r\n            text-align: center;\r\n            font-size: 0.8rem;\r\n            padding: 5px;\r\n        }\r\n    }\r\n\r\n    #artsey-map-a {\r\n        grid-row: 1;\r\n        grid-column: 1;\r\n    }\r\n\r\n    #artsey-map-r {\r\n        grid-row: 1;\r\n        grid-column: 2;\r\n    }\r\n\r\n    #artsey-map-t {\r\n        grid-row: 1;\r\n        grid-column: 3;\r\n    }\r\n\r\n    #artsey-map-s {\r\n        grid-row: 1;\r\n        grid-column: 4;\r\n    }\r\n\r\n    #artsey-map-e {\r\n        grid-row: 2;\r\n        grid-column: 1;\r\n    }\r\n\r\n    #artsey-map-y {\r\n        grid-row: 2;\r\n        grid-column: 2;\r\n    }\r\n\r\n    #artsey-map-i {\r\n        grid-row: 2;\r\n        grid-column: 3;\r\n    }\r\n\r\n    #artsey-map-o {\r\n        grid-row: 2;\r\n        grid-column: 4;\r\n    }\r\n`;\r\n\r\nexport default KeyMapper;","import { useState } from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nimport logo from './assets/logo.png';\r\nimport ArtseyInput from './components/ArtseyInput';\r\nimport KeyMapper from \"./components/KeyMapper\";\r\nimport { DefaultKeyMaps, KeyMapDefinition } from \"./model/KeyMapDefinition\";\r\n\r\nfunction App() {    \r\n    const [keymap, setKeyMap] = useState<KeyMapDefinition>(DefaultKeyMaps[0]);\r\n\r\n    return (\r\n        <StyledApp>\r\n            <img src={logo} alt=\"logo\" id=\"logo\" />\r\n            <h1>ARTSEY Tester</h1>\r\n            <p>\r\n                On this site you're able to test the great ARTSEY layout. Without the need of a dedicated keyboard. The tester supports all alpha key combos, space and backspace.\r\n                To learn more about ARTSEY visit the <a href=\"https://artsey.io\" title=\"ARTSEY Website\" target=\"_blank\" rel=\"noreferrer\">website</a>.<br/>\r\n            </p>\r\n            <p className=\"no-margin\"><a href=\"https://raw.githubusercontent.com/artseyio/artsey/main/layout%20diagrams/current.jpg\" title=\"ARTSEY Cheatsheet\">Cheatsheet</a> - <a href=\"Learning_Artsey.pdf\" title=\"Learn ARTSEY Book\">Learn ARTSEY Book</a></p>\r\n            <ArtseyInput keymap={ keymap }></ArtseyInput>\r\n            <KeyMapper onMappingChanged={ setKeyMap }></KeyMapper>\r\n        </StyledApp>\r\n    );\r\n}\r\n\r\nconst StyledApp = styled.div`\r\n    display:flex;\r\n    justify-content: center;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    \r\n    max-width: 700px;\r\n    margin: 25px auto;\r\n\r\n    #logo {\r\n        width: 150px;S\r\n    }\r\n\r\n    .no-margin {\r\n        margin: 0;\r\n    }\r\n`;\r\n\r\nexport default App;\r\n","import { createGlobalStyle } from \"styled-components\";\r\n\r\nfunction Typography() {\r\n    return <GlobalStyle/>;\r\n}\r\n\r\nconst GlobalStyle = createGlobalStyle`\r\n    html, body, #root {\r\n        width: 100%;\r\n        height: 100%;\r\n        overflow: auto;\r\n    }\r\n\r\n    body {\r\n        background: ${ p => p.theme.backgroundColor };\r\n        color: ${ p => p.theme.textColor };\r\n        line-height: 1.65;\r\n        font-weight: 400;\r\n        font-family: Segoe UI, Roboto, Noto Sans, Ubuntu, Cantarell, Helvetica Neue,sans-serif;\r\n        overflow:hidden;\r\n    }\r\n\r\n    p { margin-bottom: 1.15rem; text-align: justify; }\r\n\r\n    h1, h2, h3, h4, h5 {\r\n        margin: 0 0 2rem 0;\r\n        line-height: 1.15;\r\n        font-weight: 100;\r\n    }\r\n    \r\n    h1 {\r\n        margin-top: 0;\r\n        font-size: 2.488em;\r\n    }\r\n\r\n    h2 { font-size: 2.074em; }\r\n    h3 { font-size: 1.728em; }\r\n    h4 { font-size: 1.44em; }\r\n    h5 { font-size: 1.2em; }\r\n    small, .text-small { font-size: 0.833em; color: #777777; }\r\n\r\n    a {\r\n        text-decoration: none;\r\n        color: ${ p => p.theme.primaryColor };\r\n        &:hover {\r\n            font-weight: bold;\r\n        }\r\n        i {\r\n            vertical-align: middle;\r\n            color: ${ p => p.theme.textColorFaded };\r\n            &:hover { color: ${ p => p.theme.primaryColor }; }\r\n        }\r\n    }\r\n`;\r\n\r\nexport default Typography;","import { Reset } from 'styled-reset';\r\nimport { ThemeProvider } from 'styled-components';\r\n\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport Typography from './components/Typography';\r\n\r\nconst Theme = {\r\n    textColor: \"#727272\",\r\n    textColorFaded: \"#bebebe\",\r\n    primaryColor: \"#0068b4\",\r\n    secondaryColor: \"#0098ff\",\r\n    backgroundColor: \"#FFFFFF\",\r\n    borderColor: \"rgba(0, 0, 0, 0.1)\",\r\n    colorRed: \"#ff4a4a\",\r\n    colorBlue: \"#4c5fff\",\r\n    colorGreen: \"#2ea169\",\r\n    cursorColor: \"#1E1E1E\"\r\n};\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <ThemeProvider theme={Theme}>\r\n            <Reset/>\r\n            <Typography/>\r\n            <App />\r\n        </ThemeProvider>\r\n    </React.StrictMode>,\r\n    document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}