{"version":3,"sources":["assets/logo.png","effects/KeyMapperEffect.ts","components/IconButton.tsx","components/KeyMapper.tsx","components/ArtseyInput.tsx","App.tsx","components/Typography.tsx","index.tsx"],"names":["combos","code","key","StyledIconButton","styled","button","p","theme","textColorFaded","IconButton","props","className","active","disabled","title","tooltip","onClick","icon","StyledKeyMapper","div","borderColor","KeyMapper","useState","aMapping","setAMapping","rMapping","setRMapping","tMapping","setTMapping","sMapping","setSMapping","eMapping","setEMapping","yMapping","setYMapping","iMapping","setIMapping","oMapping","setOMapping","useEffect","asCode","toUpperCase","keymap","onMappingChanged","id","value","onChange","e","target","StyledArtseyInput","cursorColor","textColor","colorRed","ArtseyInput","getMap","setKeyMap","caretPos","setCaretPos","artsyKeys","setArtsyKeys","randomWords","wordList","setWordList","joinedWordList","setJoinedWordList","wordListElements","setWordListElements","keyQueue","setKeyQueue","isFocused","setFocused","wordDivRef","useRef","getArtseyValue","queue","map","mappedKeys","i","length","mappedKey","undefined","push","comboKeyCode","k","sort","reduce","pre","cur","idx","vals","reset","generateWordListElements","interval","setInterval","artsyKey","prev","slice","split","clearInterval","join","current","focus","pos","caretDiv","w","idxw","wordDiv","c","idxc","caret","ele","tabIndex","onFocus","onBlur","onKeyUp","oldArray","preventDefault","ref","faSync","StyledApp","App","src","logo","alt","href","rel","GlobalStyle","createGlobalStyle","backgroundColor","primaryColor","Typography","ReactDOM","render","StrictMode","secondaryColor","colorBlue","colorGreen","document","getElementById"],"mappings":"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","file":"static/js/main.71e4bbb3.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.ba7ca334.png\";","export type KeyInfo = { code: string, key: string }\r\nconst combos: { [id: string]: KeyInfo } = { \r\n    \"KeyE_KeyO\": { code: \"KeyB\", key: \"b\" },\r\n    \"KeyE_KeyY\": { code: \"KeyC\", key: \"c\" },\r\n    \"KeyA_KeyR_KeyT\": { code: \"KeyB\", key: \"d\" },\r\n    \"KeyA_KeyR\": { code: \"KeyF\", key: \"f\" },\r\n    \"KeyR_KeyT\": { code: \"KeyG\", key: \"g\" },\r\n    \"KeyE_KeyI\": { code: \"KeyH\", key: \"h\" },\r\n    \"KeyS_KeyT\": { code: \"KeyJ\", key: \"j\" },\r\n    \"KeyO_KeyY\": { code: \"KeyK\", key: \"k\" },\r\n    \"KeyE_KeyI_KeyY\": { code: \"KeyL\", key: \"l\" },\r\n    \"KeyI_KeyO_KeyY\": { code: \"KeyM\", key: \"m\" },\r\n    \"KeyI_KeyO\": { code: \"KeyN\", key: \"n\" },\r\n    \"KeyE_KeyI_KeyO\": { code: \"KeyP\", key: \"p\" },\r\n    \"KeyA_KeyS_KeyT\": { code: \"KeyQ\", key: \"q\" },\r\n    \"KeyI_KeyY\": { code: \"KeyU\", key: \"u\" },\r\n    \"KeyR_KeyS\": { code: \"KeyV\", key: \"v\" },\r\n    \"KeyA_KeyS\": { code: \"KeyW\", key: \"w\" },\r\n    \"KeyR_KeyS_KeyT\": { code: \"KeyX\", key: \"x\" },\r\n    \"KeyA_KeyR_KeyS_KeyT\": { code: \"KeyZ\", key: \"z\" },\r\n    \"KeyE_KeyI_KeyO_KeyY\": { code: \"Space\", key: \"Space\" },\r\n    \"KeyE_KeyR\": { code: \"Backspace\", key: \"Backspace\" }\r\n};\r\n\r\nexport default function useKeyMapper(getMap: () => { [id: string] : KeyInfo }) {\r\n    return (queue: Array<React.KeyboardEvent<HTMLInputElement>>): string | undefined => \r\n    {\r\n        let map = getMap();\r\n        let mappedKeys = [];\r\n        for(let i = 0; i < queue.length; i++) {\r\n            let mappedKey = map[queue[i].code];\r\n            if(mappedKey !== undefined) mappedKeys.push(mappedKey);\r\n        }\r\n        \r\n        let comboKeyCode = mappedKeys\r\n            .map(k => k.code)\r\n            .sort()\r\n            .reduce((pre, cur, idx, vals) => { return pre + (pre !== \"\" ? \"_\" : \"\") + cur }, \"\");\r\n\r\n        if(mappedKeys.length === 0) return undefined\r\n        else if(mappedKeys.length === 1) return mappedKeys[0].key;\r\n        else return combos[comboKeyCode].key;\r\n    };\r\n}","import styled from \"styled-components\";\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { IconDefinition } from '@fortawesome/free-solid-svg-icons';\r\n\r\ninterface ButtonProps  {\r\n    active?: boolean;\r\n    disabled?: boolean;\r\n    icon?: IconDefinition;\r\n    tooltip?: string;\r\n    color?: string;\r\n    onClick?: React.MouseEventHandler<HTMLButtonElement | undefined>;\r\n}\r\n\r\nfunction IconButton(props: ButtonProps) {\r\n    return (\r\n        <StyledIconButton className={ props.active ? 'active' : '' } disabled={props.disabled} title={props.tooltip} onClick={props.onClick} >\r\n            { props.icon != null && <FontAwesomeIcon icon={props.icon} /> }\r\n        </StyledIconButton>\r\n    );\r\n}\r\n\r\nconst StyledIconButton = styled.button`\r\n    margin: 0;\r\n    padding: 2px;\r\n    border: none;\r\n    background: none;\r\n    color: ${ p => p.theme.textColorFaded };\r\n\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n\r\n    font-size: 1.2rem;\r\n\r\n    svg {\r\n        flex: 1;\r\n    }\r\n\r\n    :active:enabled {\r\n        color: black!important;\r\n        transform: scale(0.85);\r\n    }\r\n\r\n    :hover:enabled {\r\n        cursor: pointer;\r\n        color: ${ p => p.theme.textColorFaded };\r\n    }\r\n`;\r\n\r\nexport default IconButton;\r\n","import React, { FC, useEffect, useRef, useState } from 'react';\r\nimport styled from \"styled-components\";\r\nimport { KeyInfo } from '../effects/KeyMapperEffect';\r\n\r\ninterface KeyMapperComponentProps {\r\n    onMappingChanged: (mapping: { [id: string] : KeyInfo }) => void;\r\n}\r\n\r\nexport const KeyMapper: FC<KeyMapperComponentProps> = (props: KeyMapperComponentProps) => {\r\n    const [aMapping, setAMapping] = useState(\"u\");\r\n    const [rMapping, setRMapping] = useState(\"y\");\r\n    const [tMapping, setTMapping] = useState(\"t\");\r\n    const [sMapping, setSMapping] = useState(\"r\");\r\n    const [eMapping, setEMapping] = useState(\"j\");\r\n    const [yMapping, setYMapping] = useState(\"h\");\r\n    const [iMapping, setIMapping] = useState(\"g\");\r\n    const [oMapping, setOMapping] = useState(\"f\");\r\n\r\n    useEffect(() => {\r\n        let asCode = (key: string) => \"Key\" + key.toUpperCase();\r\n\r\n        let keymap: { [id: string] : KeyInfo } = {};\r\n        keymap[asCode(aMapping)] = { code: \"KeyA\", key: \"a\" };\r\n        keymap[asCode(rMapping)] = { code: \"KeyR\", key: \"r\" };\r\n        keymap[asCode(tMapping)] = { code: \"KeyT\", key: \"t\" };\r\n        keymap[asCode(sMapping)] = { code: \"KeyS\", key: \"s\" };\r\n        keymap[asCode(eMapping)] = { code: \"KeyE\", key: \"e\" };\r\n        keymap[asCode(yMapping)] = { code: \"KeyY\", key: \"y\" };\r\n        keymap[asCode(iMapping)] = { code: \"KeyI\", key: \"i\" };\r\n        keymap[asCode(oMapping)] = { code: \"KeyO\", key: \"o\" };\r\n\r\n        props.onMappingChanged(keymap);\r\n    }, [aMapping, rMapping, tMapping, sMapping, eMapping, yMapping, iMapping, oMapping]);\r\n\r\n    return (\r\n        <StyledKeyMapper>\r\n            <p>\r\n                This is the key mapper. It maps the keys of your keyboard to the indicated keys of artsey. The default mapping is for a left handed usage.\r\n                If you are already using combos on your keyboard, make sure, that you are not using the regarding keys in the mapping. This can cause problems.\r\n            </p>\r\n            <div id=\"key-map\">\r\n                <div id=\"artsey-map-a\" className=\"key\">A <input value={ aMapping } onChange={ (e) => setAMapping(e.target.value) }></input></div>\r\n                <div id=\"artsey-map-r\" className=\"key\">R <input value={ rMapping } onChange={ (e) => setRMapping(e.target.value) }></input></div>\r\n                <div id=\"artsey-map-t\" className=\"key\">T <input value={ tMapping } onChange={ (e) => setTMapping(e.target.value) }></input></div>\r\n                <div id=\"artsey-map-s\" className=\"key\">S <input value={ sMapping } onChange={ (e) => setSMapping(e.target.value) }></input></div>\r\n                <div id=\"artsey-map-e\" className=\"key\">E <input value={ eMapping } onChange={ (e) => setEMapping(e.target.value) }></input></div>\r\n                <div id=\"artsey-map-y\" className=\"key\">Y <input value={ yMapping } onChange={ (e) => setYMapping(e.target.value) }></input></div>\r\n                <div id=\"artsey-map-i\" className=\"key\">I <input value={ iMapping } onChange={ (e) => setIMapping(e.target.value) }></input></div>\r\n                <div id=\"artsey-map-o\" className=\"key\">O <input value={ oMapping } onChange={ (e) => setOMapping(e.target.value) }></input></div>\r\n            </div>\r\n        </StyledKeyMapper>\r\n    );\r\n}\r\n\r\nconst StyledKeyMapper = styled.div`{}\r\n    margin: 100px 0 0 0;\r\n    text-align: center;\r\n\r\n    #key-map {\r\n        display: inline-grid;\r\n        gap: 10px;\r\n    }\r\n\r\n    .key {\r\n        border: 1px solid ${ p => p.theme.borderColor };\r\n        border-radius: 5px;\r\n        width: 50px;\r\n        height: 50px;\r\n        padding: 10px 5px;\r\n        font-weight: bold;\r\n\r\n        input {\r\n            width: 100%;\r\n            box-sizing: border-box;\r\n            border: 1px solid ${ p => p.theme.borderColor };\r\n            text-align: center;\r\n        }\r\n    }\r\n\r\n    #artsey-map-a {\r\n        grid-row: 1;\r\n        grid-column: 1;\r\n    }\r\n\r\n    #artsey-map-r {\r\n        grid-row: 1;\r\n        grid-column: 2;\r\n    }\r\n\r\n    #artsey-map-t {\r\n        grid-row: 1;\r\n        grid-column: 3;\r\n    }\r\n\r\n    #artsey-map-s {\r\n        grid-row: 1;\r\n        grid-column: 4;\r\n    }\r\n\r\n    #artsey-map-e {\r\n        grid-row: 2;\r\n        grid-column: 1;\r\n    }\r\n\r\n    #artsey-map-y {\r\n        grid-row: 2;\r\n        grid-column: 2;\r\n    }\r\n\r\n    #artsey-map-i {\r\n        grid-row: 2;\r\n        grid-column: 3;\r\n    }\r\n\r\n    #artsey-map-o {\r\n        grid-row: 2;\r\n        grid-column: 4;\r\n    }\r\n`;\r\n\r\nexport default KeyMapper;","import React, { useEffect, useRef, useState } from 'react';\r\nimport styled from \"styled-components\";\r\nimport randomWords from \"random-words\";\r\nimport useKeyMapper, { KeyInfo } from '../effects/KeyMapperEffect';\r\nimport { faSync } from '@fortawesome/free-solid-svg-icons';\r\nimport IconButton from './IconButton';\r\nimport KeyMapper from './KeyMapper';\r\n\r\nfunction ArtseyInput() {\r\n    const [keymap, setKeyMap] = useState<{ [id: string] : KeyInfo }>({});\r\n    const [caretPos, setCaretPos] = useState(0);\r\n    const [artsyKeys, setArtsyKeys] = useState<Array<string>>([]);\r\n    const [wordList, setWordList] = useState<Array<string>>(randomWords(25));\r\n    const [joinedWordList, setJoinedWordList] = useState(\"\");\r\n    const [wordListElements, setWordListElements] = useState<Array<JSX.Element>>();\r\n    const [keyQueue, setKeyQueue] = useState<Array<React.KeyboardEvent<HTMLInputElement>>>([]);\r\n    const [isFocused, setFocused] = useState(false);\r\n    const wordDivRef = useRef<HTMLDivElement>(null);\r\n    const getArtseyValue = useKeyMapper(() => keymap);\r\n\r\n    useEffect(() => reset(), []);\r\n    useEffect(() => { setWordListElements(generateWordListElements()); }, [caretPos, artsyKeys, wordList]);\r\n    useEffect(() => {\r\n        const interval = setInterval(() => {\r\n            if(keyQueue.length !== 0) {\r\n                let artsyKey = getArtseyValue(keyQueue);\r\n                if(artsyKey === \"Backspace\" && artsyKeys.length > 0) {\r\n                    setArtsyKeys(prev => [...prev.slice(0, prev.length - 1)]);\r\n                    setCaretPos(caretPos - 1);\r\n                }\r\n                else if(artsyKey !== undefined && artsyKey !== \"Backspace\"\r\n                    && ((joinedWordList.split(\"\")[caretPos] === \" \" && artsyKey === \"Space\") || joinedWordList.split(\"\")[caretPos] !== \" \")\r\n                ) {\r\n                        setArtsyKeys(prev => [...prev, artsyKey as string]);\r\n                        setCaretPos(caretPos + 1);\r\n                }                \r\n                setKeyQueue([]);\r\n            }\r\n        }, 75);\r\n        return () => clearInterval(interval);\r\n    }, [keyQueue]);\r\n\r\n    const reset = () => {\r\n        let wordList = randomWords(25);\r\n        setArtsyKeys([]);\r\n        setKeyQueue([]);\r\n        setCaretPos(0);\r\n        setWordList(wordList);\r\n        setJoinedWordList(wordList.join(\" \"));\r\n        wordDivRef.current?.focus()\r\n    }\r\n\r\n    const onKeyUp = (e: React.KeyboardEvent<HTMLInputElement>) => {\r\n        setKeyQueue(oldArray => [...oldArray, e]);\r\n        e.preventDefault();\r\n    }\r\n\r\n    const generateWordListElements = (): Array<JSX.Element> => {\r\n        let pos = 0;\r\n        let caretDiv = <div id=\"caret\"></div>;\r\n        let words = wordList.map((w, idxw) => {\r\n            let wordDiv = <div className=\"word\" key={idxw + w}>\r\n                { w.split(\"\").map((c, idxc) => {\r\n                    let caret = pos === caretPos ? caretDiv : undefined;\r\n                    let ele = artsyKeys.length - 1 >= pos\r\n                        ? <div className={ artsyKeys[pos] === c ? \"letter correct\" : \"letter wrong\" } key={idxc + c}>{c}</div>\r\n                        : <div className=\"letter\" key={idxc + c}>{c}</div>;\r\n                    pos++;\r\n                    return caret !== undefined ? [caret, ele] : [ele];\r\n                })}\r\n                { pos === caretPos && caretDiv }\r\n                <div className=\"space\"></div>\r\n            </div>\r\n            pos++;\r\n            return wordDiv;\r\n        });\r\n        return words;\r\n    }\r\n\r\n    return (\r\n        <StyledArtseyInput>\r\n            <div id=\"word-list\" tabIndex={0} onFocus={ () => setFocused(true) } onBlur={ () => setFocused(false) } onKeyUp={ onKeyUp } ref={ wordDivRef }>\r\n                { !isFocused && <div id=\"focus-message\"><p>Focus Please</p></div> }\r\n                { wordListElements }\r\n            </div>\r\n            <small id=\"keycode-monitor\">Last Registered: { artsyKeys.length !== 0 ? artsyKeys[artsyKeys.length - 1] : \"NONE\" }</small>\r\n            <IconButton icon={faSync} onClick={ reset } ></IconButton>\r\n            <KeyMapper onMappingChanged={ setKeyMap }></KeyMapper>\r\n        </StyledArtseyInput>\r\n    );\r\n}\r\n\r\nconst StyledArtseyInput = styled.div`{}\r\n    display:flex;\r\n    justify-content: center;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    align-content: stretch;\r\n    align-items: stretch;\r\n    margin: 75px 0 25px 0;\r\n\r\n    #logo {\r\n        width: 150px;\r\n    }\r\n\r\n    p {\r\n        text-align: center;\r\n    }\r\n\r\n    #word-list {\r\n        position: relative;\r\n        font-size: 1.5rem;\r\n        display: flex;\r\n        flex-wrap: wrap;\r\n        outline: 0;\r\n        -webkit-user-select: none; /* Safari */        \r\n        -moz-user-select: none; /* Firefox */\r\n        -ms-user-select: none; /* IE10+/Edge */\r\n        user-select: none; /* Standard */\r\n    }\r\n\r\n    #keycode-monitor {\r\n        text-align: left;\r\n        font-weight: bold;\r\n        margin: 10px 0;\r\n        color: ${ p => p.theme.textColorFaded };\r\n    }\r\n\r\n    #caret {\r\n        display: block;\r\n        width: 0px;\r\n        border: 1px solid ${ p => p.theme.cursorColor };\r\n        animation: blinker 2s linear infinite;\r\n        margin-top: 5px;\r\n    }\r\n\r\n    @keyframes blinker {\r\n        50% {\r\n            opacity: 0;\r\n        }\r\n    }\r\n\r\n    #focus-message {\r\n        position: absolute;\r\n        width: 100%;\r\n        height: 100%;\r\n        text-align: center;\r\n        background: rgba(255, 255, 255, 0.75);\r\n        display: flex;\r\n        justify-content: center;\r\n        align-items: center;\r\n\r\n        p { font-weight: bold; }\r\n    }\r\n\r\n    .word {\r\n        display: flex;\r\n        margin-right: 10px;\r\n        color: ${ p => p.theme.textColorFaded };\r\n    }\r\n\r\n    .correct { color: ${ p => p.theme.textColor }; }\r\n    .wrong { color: ${ p => p.theme.colorRed }; }\r\n`;\r\n\r\nexport default ArtseyInput;","import styled from \"styled-components\";\nimport logo from './assets/logo.png';\nimport ArtseyInput from './components/ArtseyInput';\n\nfunction App() {\n    return (\n        <StyledApp>\n            <img src={logo} alt=\"logo\" id=\"logo\" />\n            <h1>ARTSEY Tester</h1>\n            <p>\n                On this site you're able to test the great ARTSEY layout. Without the need of a dedicated keyboard. The tester supports all alpha key combos, space and backspace.\n                To learn more about ARTSEY visit the <a href=\"https://artsey.io\" title=\"ARTSEY Website\" target=\"_blank\" rel=\"noreferrer\">website</a>.<br/>\n                <a href=\"https://raw.githubusercontent.com/artseyio/artsey/main/layout%20diagrams/current.jpg\" title=\"ARTSEY Cheatsheet\">Cheatsheet</a> - <a href=\"Learning_Artsey.pdf\" title=\"Learn ARTSEY Book\">Learn ARTSEY Book</a>\n            </p>\n            <ArtseyInput></ArtseyInput>\n        </StyledApp>\n    );\n}\n\nconst StyledApp = styled.div`\n    display:flex;\n    justify-content: center;\n    flex-direction: column;\n    align-items: center;\n    \n    max-width: 700px;\n    margin: 25px auto;\n\n    #logo {\n        width: 150px;S\n    }\n\n    p {\n        text-align: center;\n    }\n`;\n\nexport default App;\n","import { createGlobalStyle } from \"styled-components\";\r\n\r\nfunction Typography() {\r\n    return <GlobalStyle/>;\r\n}\r\n\r\nconst GlobalStyle = createGlobalStyle`\r\n    html, body, #root {\r\n        width: 100%;\r\n        height: 100%;\r\n        overflow: auto;\r\n    }\r\n\r\n    body {\r\n        background: ${ p => p.theme.backgroundColor };\r\n        color: ${ p => p.theme.textColor };\r\n        line-height: 1.65;\r\n        font-weight: 400;\r\n        font-family: Segoe UI, Roboto, Noto Sans, Ubuntu, Cantarell, Helvetica Neue,sans-serif;\r\n        overflow:hidden;\r\n    }\r\n\r\n    p {margin-bottom: 1.15rem; text-align: justify; }\r\n\r\n    h1, h2, h3, h4, h5 {\r\n        margin: 0 0 2rem 0;\r\n        line-height: 1.15;\r\n        font-weight: 100;\r\n    }\r\n    \r\n    h1 {\r\n        margin-top: 0;\r\n        font-size: 2.488em;\r\n    }\r\n\r\n    h2 { font-size: 2.074em; }\r\n    h3 { font-size: 1.728em; }\r\n    h4 { font-size: 1.44em; }\r\n    h5 { font-size: 1.2em; }\r\n    small, .text-small { font-size: 0.833em; color: #777777; }\r\n\r\n    a {\r\n        text-decoration: none;\r\n        color: ${ p => p.theme.primaryColor };\r\n        &:hover {\r\n            font-weight: bold;\r\n        }\r\n        i {\r\n            vertical-align: middle;\r\n            color: ${ p => p.theme.textColorFaded };\r\n            &:hover { color: ${ p => p.theme.primaryColor }; }\r\n        }\r\n    }\r\n`;\r\n\r\nexport default Typography;","import { Reset } from 'styled-reset';\nimport { ThemeProvider } from 'styled-components';\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport Typography from './components/Typography';\n\nconst Theme = {\n    textColor: \"#727272\",\n    textColorFaded: \"#bebebe\",\n    primaryColor: \"#0068b4\",\n    secondaryColor: \"#0098ff\",\n    backgroundColor: \"#FFFFFF\",\n    borderColor: \"rgba(0, 0, 0, 0.1)\",\n    colorRed: \"#ff4a4a\",\n    colorBlue: \"#4c5fff\",\n    colorGreen: \"#2ea169\",\n    cursorColor: \"#1E1E1E\"\n};\n\nReactDOM.render(\n    <React.StrictMode>\n        <ThemeProvider theme={Theme}>\n            <Reset/>\n            <Typography/>\n            <App />\n        </ThemeProvider>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n"],"sourceRoot":""}